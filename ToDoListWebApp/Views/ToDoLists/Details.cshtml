@model ToDoListWebApp.Models.ToDoList

@{
    ViewData["Title"] = "Details";
}

<h1>List Details - @Html.DisplayFor(model => model.Name)</h1>

<div>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CreateDateTime)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CreateDateTime)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-toDoListId="@Model.Id">Edit To Do List</a> |
    <a asp-action="Index">Back to my To Do Lists</a>
</div>

<div>
    <br />
    <h4>Your Tasks</h4>
    <br>
    @{
        if (Model.ListItems == null || !Model.ListItems.Any())
        {
            <h3>You don't have any tasks in this To Do List.</h3>
        }
        else
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>

                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ListItems.FirstOrDefault().Name)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ListItems.FirstOrDefault().Description)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ListItems.FirstOrDefault().UpdateDateTime)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ListItems.FirstOrDefault().LimitDateTime)
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.ListItems)
                    {
                        <tr>
                            <td>
                                @Html.CheckBoxFor(modelitem => item.IsChecked, new { @class = "toggle-checkbox", data_id = item.Id })
                            </td>
                            <td>
                                @Html.DisplayFor(modelitem => item.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelitem => item.Description)
                            </td>
                            <td>
                                @Html.DisplayFor(modelitem => item.UpdateDateTime)
                            </td>
                            <td>
                                @Html.DisplayFor(modelitem => item.LimitDateTime)
                            </td>
                            <td>
                                <a asp-area="" asp-controller="ListItems" asp-action="Edit" asp-route-Id="@item.Id">Edit</a> |
                                <a asp-area="" asp-controller="ListItems" asp-action="Delete" asp-route-Id="@item.Id">Delete</a>
                            </td>

                        </tr>
                    }
                </tbody>
            </table>
        }
        <br />
        <a asp-area="" asp-controller="ListItems" asp-action="Create" asp-route-toDoListId="@Model.Id">Create a new Task</a>
    }
</div>


@section Scripts {
    <script type="text/javascript">
    var url = '@Url.Action("UpdateStatus")';
    $('.toggle-checkbox').click(function () {
        var isChecked = $(this).is(':checked'); //CheckBox checked - True or false
        var id = $(this).data('id'); //Get the id of that specific checked row

        $.post(url, { id: id, status: isChecked }, function (response) {
        })
    });
    </script>
}